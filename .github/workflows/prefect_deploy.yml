name: Reusable Prefect Deploy

# This workflow can be called as a reusable workflow (workflow_call) or
# manually dispatched (workflow_dispatch). When called as a reusable workflow
# callers may pass PREFECT_API_KEY via workflow_call.secrets; when dispatched
# manually the API key can be given via the 'prefect_api_key' input.
"on":
  workflow_call:
    secrets:
      PREFECT_API_KEY:
        required: false
  workflow_dispatch:
    inputs:
      prefect_api_key:
        description: 'Prefect API key (optional)'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Prefect
        run: |
          python -m pip install --upgrade pip
          pip install prefect

      - name: Authenticate Prefect and deploy
        run: |
          # Prefer secret provided by workflow_call; fall back to workflow_dispatch input
          PREFECT_API_KEY="${{ secrets.PREFECT_API_KEY }}"
          if [ -z "$PREFECT_API_KEY" ]; then
            PREFECT_API_KEY="${{ github.event.inputs.prefect_api_key }}"
          fi
          if [ -z "$PREFECT_API_KEY" ]; then
            echo "PREFECT_API_KEY not provided, skipping authentication and deploy"
            exit 0
          fi
          prefect cloud login --key "$PREFECT_API_KEY" || true
          PYTHONPATH=. python3 prefect_flows/data_pipeline_flow.py || true

      - name: "Create & upload prefect deploy audit"
        run: |
          AUDIT_DIR=.prefect_audit
          mkdir -p "$AUDIT_DIR"
          ts=$(date --utc +%Y-%m-%dT%H:%M:%SZ)
          key_end=${PREFECT_API_KEY: -4}
          echo "timestamp=$ts actor=$GITHUB_ACTOR source=prefect_deploy key_mask=****${key_end}" \
            > "$AUDIT_DIR/audit.txt"
      - name: Upload prefect deploy audit
        uses: actions/upload-artifact@v4
        with:
          name: prefect-deploy-audit
          path: .prefect_audit
          if-no-files-found: warn

      - name: Zero and unset PREFECT_API_KEY
        run: |
          PREFECT_API_KEY='REDACTED'
          export PREFECT_API_KEY
          unset PREFECT_API_KEY

      - name: "Optional: rotate Prefect API key via webhook"
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          ROTATE_URL="${{ secrets.ROTATE_PREFECT_API_URL }}"
          ROTATE_TOKEN="${{ secrets.ROTATE_PREFECT_API_TOKEN }}"
          if [ -z "$ROTATE_URL" ]; then
            echo "No rotation endpoint configured; skipping rotation"
            exit 0
          fi
          echo "Calling rotation endpoint (will not echo key to logs)"
          curl --fail --silent --show-error -X POST "$ROTATE_URL" \
            -H "Authorization: Bearer $ROTATE_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"action":"rotate", "source":"github_actions"}' || echo "Rotation call failed"
